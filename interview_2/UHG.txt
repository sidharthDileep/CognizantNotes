@RestController
@RequestMapping("api/v1")
public class customController {

@Autowired
SomeService service;


@PostMapping("/something")
public ResponseEntity<>() callMethods(@RequestBody Modelclass request){
	ModelResponse response = service.call(request);
	
	return new ResponseEntity.ok(response);
}


}

Employee - empId, name , grade

Group - id, name, empId

empDetails group by Group and sort by grade and name

map<groupId, List<empNames>>

empList.stream().sorted(Employee::sortByGradeAndName).collect(Collectors.toList());

(Employee emp1, Employee emp2) -> { if(emp1.getGrade() < emp2.getGrade()) return -1;
				else if(emp1.getGrade().equals(emp2.getGrade()) { return emp1.getName() < return emp2.getName();}
				else return 1; }


road, read;

isAnagram(String str1, String str2){
	char[] arr1 = str1.toCharArray();
	char[] arr2 = str2.toCharArray();
	int[] nums  = new int[26];
	for(int i = 0;

}

5, 9, 3, 1, 2

7

Map<Integer, Integer> map = new HashMap<>();

for(int i = 0; i < arr.length; i++){
if(map.contains(target - arr[i]){
return target + arr[i];



map.put(arr[i], arr[i]);

}

default retension period of kafka?
Transaction propogation is required when concurrent requests come for persisting data in db?


